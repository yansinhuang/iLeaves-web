{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 5.5em auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Head from 'next/head';\nimport React, { Component } from 'react';\nimport ReactTable from \"react-table\";\nimport styled from 'styled-components';\nimport \"react-table/react-table.css\";\nimport window from 'global';\nimport MonthPickerInput from 'react-month-picker-input';\nimport Loader from \"./loader\"; //import 'react-month-picker-input/dist/react-month-picker-input.css';\n//var MonthPickerInput = require('react-month-picker-input');\n\nrequire('react-month-picker-input/dist/react-month-picker-input.css');\n\nvar liff = window.liff;\nvar BOX = styled.div(_templateObject());\n\nvar liffInit = function liffInit() {\n  return _regeneratorRuntime.async(function liffInit$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          liff.init(function (data) {\n            var userId = data.context.userId;\n            var accessToken = liff.getAccessToken(); //alert(\"success\");\n            //alert(userId);\n\n            var URL_CHECKEXIST = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/checkExist\";\n            var body = {\n              userId: userId\n            };\n            fetch(URL_CHECKEXIST, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: _JSON$stringify(body)\n            }).then(function (res) {\n              return res.text();\n            }).then(function (result) {\n              if (result) {\n                alert(userId);\n                alert(accessToken);\n                lineAuth(userId, accessToken);\n              } else {\n                alert(\"請登入以查看假單\");\n                window.location.replace(\"https://teddybear-dev.firebaseapp.com/signIn\");\n              }\n            });\n          }, function (err) {\n            alert(\"error\");\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar lineAuth = function lineAuth(userId, accessToken) {\n  var url, body;\n  return _regeneratorRuntime.async(function lineAuth$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          url = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/lineAuth\";\n          body = {\n            userId: userId,\n            accessToken: accessToken\n          };\n          fetch(url, {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: _JSON$stringify(body)\n          }).then(function (res) {\n            return res.json();\n          }).then(function (result) {\n            if (result) {\n              alert(\"success\"); //alert(result.staff);\n              //alert(result);\n\n              var ubn = result.staff.ubn;\n              var email = result.staff.email;\n              var idToken = result.token.idToken;\n              getLeaves(ubn, email, idToken);\n            } else {\n              alert(\"lineAuth no result\");\n            }\n          })[\"catch\"](function (error) {\n            alert(error.message);\n          });\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nvar leaves;\n\nvar getLeaves = function getLeaves(ubn, email, idToken) {\n  var url_pre, url, header;\n  return _regeneratorRuntime.async(function getLeaves$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          url_pre = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/leave/get\";\n          url = url_pre + \"?ubn=\".concat(ubn, \"&query=email&value=\").concat(email);\n          header = {\n            Authorization: idToken\n          };\n          fetch(url, {\n            method: 'get',\n            headers: header\n          }).then(function (res) {\n            return res.json();\n          }).then(function (result) {\n            if (result) {\n              convertData(result.list);\n              alert(result.list[0].startDate);\n            } else {\n              alert(\"getLeaves no result\");\n            }\n          })[\"catch\"](function (error) {\n            alert(error.message);\n          });\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\n\nvar convertData = function convertData(list) {\n  var newList, i, data;\n  return _regeneratorRuntime.async(function convertData$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          newList = [];\n\n          for (i = 0; i < list.length; i++) {\n            data = {\n              \"startDate\": list[i].startDate,\n              \"endDate\": list[i].endDate,\n              \"leaveType\": list[i].leaveType,\n              \"substitute\": list[i].substitute.name,\n              \"status\": list[i].status,\n              \"leaveReason\": list[i].leaveReason,\n              \"rejectReason\": list[i].rejectReason\n            };\n            newList.push(data);\n          }\n\n          leaves = newList; //alert(leaves);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n}; //liffInit();\n\n\nvar Basic = function Basic() {\n  return __jsx(Head, null, __jsx(\"script\", {\n    src: \"https://d.line-scdn.net/liff/1.0/sdk.js\"\n  }));\n}; //export default Basic;\n\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      //alert(event);\n      //alert(event.target.value);\n      _this.setState({\n        searchInput: event\n      }, function () {\n        _this.globalSearch();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"globalSearch\", function () {\n      var searchInput = _this.state.searchInput;\n      var date_array = searchInput.split(\"/\");\n      var date_select = new Date(date_array[1], date_array[0]);\n      var year_select = date_select.getFullYear();\n      var month_select = date_select.getMonth();\n\n      var filteredData = _this.state.data_origin.filter(function (value) {\n        var date = new Date(value.startDate);\n        var year = date.getFullYear();\n        var month = date.getMonth() + 1;\n        return year === year_select && month === month_select;\n      });\n\n      _this.setState({\n        data: filteredData,\n        loading: false\n      });\n    });\n\n    _this.state = {\n      data: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.liffInit();\n    }\n  }, {\n    key: \"liffInit\",\n    value: function liffInit() {\n      var _this2 = this;\n\n      liff.init(function (data) {\n        var userId = data.context.userId;\n        var accessToken = liff.getAccessToken(); //alert(\"success\");\n        //alert(userId);\n\n        var URL_CHECKEXIST = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/checkExist\";\n        var body = {\n          userId: userId\n        };\n        fetch(URL_CHECKEXIST, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: _JSON$stringify(body)\n        }).then(function (res) {\n          return res.text();\n        }).then(function (result) {\n          if (result) {\n            alert(userId);\n            alert(accessToken);\n\n            _this2.lineAuth(userId, accessToken);\n          } else {\n            alert(\"請登入以查看假單\");\n            window.location.replace(\"https://teddybear-dev.firebaseapp.com/signIn\");\n          }\n        });\n      }, function (err) {\n        alert(\"error\");\n      });\n    }\n  }, {\n    key: \"lineAuth\",\n    value: function lineAuth(userId, accessToken) {\n      var _this3 = this;\n\n      var url = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/lineAuth\";\n      var body = {\n        userId: userId,\n        accessToken: accessToken\n      };\n      fetch(url, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify(body)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        if (result) {\n          alert(\"success\"); //alert(result.staff);\n          //alert(result);\n\n          var ubn = result.staff.ubn;\n          var email = result.staff.email;\n          var idToken = result.token.idToken;\n\n          _this3.getLeaves(ubn, email, idToken);\n        } else {\n          alert(\"lineAuth no result\");\n        }\n      })[\"catch\"](function (error) {\n        alert(error.message);\n      });\n    }\n  }, {\n    key: \"getLeaves\",\n    value: function getLeaves(ubn, email, idToken) {\n      var _this4 = this;\n\n      var url_pre = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/leave/get\";\n      var url = url_pre + \"?ubn=\".concat(ubn, \"&query=email&value=\").concat(email);\n      var header = {\n        Authorization: idToken\n      };\n      fetch(url, {\n        method: 'get',\n        headers: header\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        if (result) {\n          _this4.convertData(result.list);\n\n          alert(result.list[0].startDate);\n        } else {\n          alert(\"getLeaves no result\");\n        }\n      })[\"catch\"](function (error) {\n        alert(error.message);\n      });\n    }\n  }, {\n    key: \"convertData\",\n    value: function convertData(list) {\n      var newList = [];\n\n      for (var i = 0; i < list.length; i++) {\n        var data = {\n          \"startDate\": list[i].startDate,\n          \"endDate\": list[i].endDate,\n          \"leaveType\": list[i].leaveType,\n          \"substitute\": JSON.parse(list[i].substitute).name,\n          \"status\": list[i].status,\n          \"leaveReason\": list[i].leaveReason,\n          \"rejectReason\": list[i].rejectReason\n        };\n        newList.push(data);\n      }\n\n      this.setState({\n        data: newList,\n        data_origin: newList\n      }); //leaves = newList;\n      //alert(leaves);\n    }\n  }, {\n    key: \"renderMyData\",\n    value: function renderMyData() {//liffInit();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var MyLoader = function MyLoader() {\n        return __jsx(Loader, {\n          loading: _this5.state.loading\n        });\n      };\n\n      var months = ['Jan', 'Feb', 'Mar', 'Spr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n      var makeText = function makeText(m) {\n        if (m && m.year && m.month) return months[m.month - 1] + '. ' + m.year;\n        return '?';\n      };\n\n      var mvalue = {\n        year: 2015,\n        month: 11\n      };\n      var columns = [{\n        Header: '開始日期',\n        accessor: 'startDate',\n        id: \"startDate\"\n      }, {\n        Header: '結束日期',\n        accessor: 'endDate'\n      }, {\n        Header: '假勤類別',\n        accessor: 'leaveType'\n      }, {\n        Header: '代理人',\n        accessor: 'substitute'\n      }, {\n        Header: '簽核狀態',\n        accessor: 'status'\n      }, {\n        Header: '請假原因',\n        accessor: 'leaveReason',\n        show: false\n      }, {\n        Header: '拒絕原因',\n        accessor: 'rejectReason',\n        show: false\n      }];\n      return __jsx(BOX, null, __jsx(MonthPickerInput, {\n        onChange: this.handleChange\n      }), __jsx(\"div\", null, this.state.data ? __jsx(ReactTable, {\n        data: this.state.data,\n        getTrProps: function getTrProps(state, rowInfo, column, instance) {\n          return {\n            onClick: function onClick(e) {\n              return alert(\"\\u958B\\u59CB\\u65E5\\u671F\\uFF1A\".concat(rowInfo.row.startDate, \"\\n\\u7D50\\u675F\\u65E5\\u671F\\uFF1A\").concat(rowInfo.row.endDate, \"\\n\\u5047\\u52E4\\u985E\\u5225\\uFF1A\").concat(rowInfo.row.leaveType, \"\\n\\u4EE3\\u7406\\u4EBA\\uFF1A\").concat(rowInfo.row.substitute, \"\\n\\u7C3D\\u6838\\u72C0\\u614B\\uFF1A\").concat(rowInfo.row.status, \"\\n\\u62D2\\u7D55\\u539F\\u56E0\\uFF1A\").concat(rowInfo.row.rejectReason));\n            }\n          };\n        },\n        columns: columns,\n        defaultPageSize: 10,\n        pageSizeOptions: [10, 15]\n      }) : __jsx(ReactTable, {\n        LoadingComponent: MyLoader,\n        data: leaves,\n        columns: columns,\n        defaultPageSize: 10,\n        pageSizeOptions: [10, 15]\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":null,"metadata":{},"sourceType":"module"}