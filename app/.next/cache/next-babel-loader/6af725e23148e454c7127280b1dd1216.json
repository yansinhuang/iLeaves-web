{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\n// Render Prop\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport fetch from 'isomorphic-unfetch';\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport icon from '../components/image/icon.png';\nimport Head from 'next/head';\nimport window from 'global';\nimport firebase from 'firebase';\nimport { BOX, TITLE, TEXT, CONTAINER, BUTTON, MYFORM, FIELD, GlobalStyle, DATEPICKER, AppLogo } from './component'; //require('firebase/auth')\n\nvar liff = window.liff;\nvar userId;\nvar config = {\n  databaseUrl: 'https://teddybear-dev.firebaseio.com',\n  authUrl: 'https://identitytoolkit.googleapis.com/v1',\n  secureUrl: 'https://securetoken.googleapis.com/v1',\n  apiKey: 'AIzaSyDhqqn1bFuw7mpHKQDdRPQZrc2HfmKb-l8'\n};\n\nfunction submitForm(data, userId) {\n  data.userId = userId;\n  fetch('https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/signIn', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(data)\n  }).then(function (res) {\n    //res.status === 200 ? this.setState({ submitted: true }) : '';\n    if (res.ok) {\n      return res.json();\n    }\n\n    throw new Error('Sign in Error');\n  }).then(function (result) {\n    if (result.userId) {\n      alert(\"登入成功\");\n    } else {\n      alert(\"首次登入成功，請至信箱收取重設密碼信\");\n      firebase.auth().sendPasswordResetEmail(result.email);\n    }\n\n    liff.closeWindow(); //document.write(\"Sign In Successfully\");\n    //alert(\"Sign In Successfully\")\n  })[\"catch\"](function (error) {\n    alert(error.message);\n  });\n}\n\nvar liffInit = function liffInit() {\n  return _regeneratorRuntime.async(function liffInit$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          firebase.initializeApp(config);\n          liff.init(function (data) {\n            // save userId\n            //const userId = data.context.userId;\n            userId = data.context.userId; //alert(\"success\");\n            //alert(userId);\n\n            var URL_CHECKEXIST = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/checkExist\";\n            var body = {\n              userId: userId\n            };\n            fetch(URL_CHECKEXIST, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: _JSON$stringify(body)\n            }).then(function (res) {\n              return res.text();\n            }).then(function (result) {\n              if (result) {\n                document.write(\"Already connected\"); //liff.closeWindow();\n              }\n            });\n          }, function (err) {\n            alert(\"error\");\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nliffInit();\n\nfunction forgotPassword(email) {\n  try {\n    firebase.auth().sendPasswordResetEmail(email).then(function () {\n      alert('Please check your email...');\n    });\n  } catch (err) {\n    alert(err);\n    next(err);\n  }\n}\n\nvar Basic = function Basic() {\n  return __jsx(BOX, null, __jsx(GlobalStyle, null), __jsx(Head, null, __jsx(\"script\", {\n    src: \"https://d.line-scdn.net/liff/1.0/sdk.js\"\n  }), __jsx(\"script\", {\n    src: \"https://cdn.firebase.com/libs/firebaseui/3.5.2/firebaseui.js\"\n  }), __jsx(\"link\", {\n    type: \"text/css\",\n    rel: \"stylesheet\",\n    href: \"https://cdn.firebase.com/libs/firebaseui/3.5.2/firebaseui.css\"\n  })), __jsx(\"body\", null, __jsx(BOX, null, __jsx(CONTAINER, {\n    style: {\n      \"background-color\": \"transparent\"\n    }\n  }, __jsx(AppLogo, {\n    src: icon\n  }), __jsx(TITLE, {\n    style: {\n      color: \"#FFFFFF\"\n    }\n  }, \"Welcome to Teddy Bear!\"), __jsx(Formik, {\n    initialValues: {\n      ubn: '',\n      email: '',\n      password: ''\n    },\n    validate: function validate(values) {\n      var errors = {}; // check for ubn\n\n      if (!values.ubn) {\n        errors.ubn = 'Required';\n      } // check for email\n\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      } // check for password\n\n\n      if (!values.password) {\n        errors.password = 'Required';\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      //submitForm(values, userId);\n      setTimeout(function () {\n        submitForm(values, userId);\n        setSubmitting(false);\n      }, 400); //console.log('submitting', values);\n      //setSubmitting(false);\n    }\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting;\n    return __jsx(CONTAINER, null, __jsx(MYFORM, null, __jsx(FIELD, {\n      type: \"ubn\",\n      name: \"ubn\",\n      label: \"UBN\",\n      component: TextField\n    }), __jsx(FIELD, {\n      type: \"email\",\n      name: \"email\",\n      label: \"Email\",\n      component: TextField\n    }), __jsx(FIELD, {\n      type: \"password\",\n      name: \"password\",\n      label: \"Password\",\n      component: TextField\n    }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(BOX, null, __jsx(BUTTON, {\n      type: \"submit\",\n      fontFamily: \"Candara\",\n      variant: \"contained\",\n      color: \"secondary\",\n      disabled: isSubmitting\n    }, \"\\u767B\\u5165\")), __jsx(BOX, null, __jsx(BUTTON, {\n      fontFamily: \"Candara\",\n      color: \"secondary\",\n      onClick: function onClick() {\n        var email = prompt(\"請輸入Email\", \"\");\n\n        if (email != null && email != \"\") {\n          forgotPassword(email);\n        }\n      }\n    }, \"\\u5FD8\\u8A18\\u5BC6\\u78BC\"))));\n  })))));\n};\n\nexport default Basic;","map":null,"metadata":{},"sourceType":"module"}