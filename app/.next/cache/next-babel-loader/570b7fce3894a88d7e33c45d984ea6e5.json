{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\n// Render Prop\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport fetch from 'isomorphic-unfetch';\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport icon from '../components/image/icon.png';\nimport Head from 'next/head';\nimport window from 'global'; //import DatePicker from \"react-datepicker\"\n\nimport DatePicker from \"material-ui-pickers/DatePicker\";\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns'; //require( \"react-datepicker/dist/react-datepicker.css\");\n\nconst liff = window.liff;\nconst BOX = styled.div`\n  margin: 5.5em auto;\n`;\nconst TITLE = styled.h2`\n  color: #F8F9F9;\n  font-family: Candara;\n  text-align: center;\n  margin-bottom:-2em;\n`;\nconst CONTAINER = styled.div`\n  background: #F7F9FA;\n  height: auto;\n  width: 90%;\n  margin: 5em auto;\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\n\n  label {\n    font-family: Candara;\n    color: #1C2833;\n    font-size: 1.2em;\n    font-weight: 400;\n  }\n`;\nconst MYFORM = styled(Form)`\n  text-align: center;\n  padding-top: 2em;\n  padding-bottom: 2em;\n`;\nconst FIELD = styled(Field)`\n  width: 80%;\n`;\nconst BUTTON = styled(Button)`\n  width: 80%;\n  variant: contained;\n`;\nconst TomatoButton = styled.button`\n  color: tomato;\n  border-color: tomato;\n  width: 80%;\n`;\n\nconst liffInit = async () => {\n  liff.init(data => {\n    const userId = data.context.userId;\n    const accessToken = liff.getAccessToken(); //alert(\"success\");\n    //alert(userId);\n\n    const URL_CHECKEXIST = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/checkExist\";\n    const body = {\n      userId: userId\n    };\n    fetch(URL_CHECKEXIST, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: _JSON$stringify(body)\n    }).then(res => {\n      return res.text();\n    }).then(result => {\n      if (result) {\n        alert(userId);\n        alert(accessToken);\n        lineAuth(userId, accessToken);\n      } else {\n        alert(\"請登入以查看假單\");\n        window.location.replace(\"https://teddybear-dev.firebaseapp.com/signIn\");\n      }\n    });\n  }, err => {\n    alert(\"error\");\n  });\n};\n\nconst lineAuth = async (userId, accessToken) => {\n  const url = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/lineAuth\";\n  const body = {\n    userId: userId,\n    accessToken: accessToken\n  };\n  fetch(url, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(body)\n  }).then(res => {\n    return res.json();\n  }).then(result => {\n    if (result) {\n      alert(\"success\"); //alert(result.staff);\n      //alert(result);\n\n      const ubn = result.staff.ubn;\n      const email = result.staff.email;\n      const idToken = result.token.idToken; //getLeaves(ubn, email, idToken);\n    } else {\n      alert(\"lineAuth no result\");\n    }\n  }).catch(function (error) {\n    alert(error.message);\n  });\n};\n\nliffInit();\nconst {\n  0: selectedDate,\n  1: handleDateChange\n} = useState(new Date());\n\nconst Basic = () => __jsx(BOX, null, __jsx(Head, null, __jsx(\"script\", {\n  src: \"https://d.line-scdn.net/liff/1.0/sdk.js\"\n})), __jsx(\"body\", {\n  style: {\n    background: '#34495E'\n  }\n}, __jsx(BOX, null, __jsx(Formik, {\n  initialValues: {\n    startDate: new Date(),\n    endDate: '',\n    leaveType: '',\n    leaveReason: ' ',\n    substitute: ' '\n  },\n  validate: values => {\n    const errors = {}; // check for ubn\n\n    if (!values.startDate) {\n      errors.startDate = 'Required';\n    } // check for email\n\n\n    if (!values.endDate) {\n      errors.endDate = 'Required';\n    } // check for leaveType\n\n\n    if (!values.leaveType) {\n      errors.leaveType = 'Required';\n    } // check for leaveReason\n\n\n    if (!values.leaveReason) {\n      errors.leaveReason = 'Required';\n    } // check for substitute\n\n\n    if (!values.substitute) {\n      errors.substitute = 'Required';\n    }\n\n    return errors;\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    //submitForm(values, userId);\n    setTimeout(() => {\n      submitForm(values, userId);\n      setSubmitting(false);\n    }, 400); //console.log('submitting', values);\n    //setSubmitting(false);\n  }\n}, ({\n  isSubmitting,\n  values,\n  setFieldValue\n}) => __jsx(CONTAINER, null, __jsx(MYFORM, null, __jsx(MuiPickersUtilsProvider, {\n  utils: DateFnsUtils\n}, __jsx(DatePicker, {\n  value: selectedDate,\n  onChange: handleDateChange\n})), __jsx(FIELD, {\n  type: \"endDate\",\n  name: \"endDate\",\n  label: \"\\u7D50\\u675F\\u65E5\\u671F\",\n  component: TextField\n}), __jsx(FIELD, {\n  type: \"leaveType\",\n  name: \"leaveType\",\n  label: \"\\u5047\\u52E4\\u985E\\u5225\",\n  component: TextField\n}), __jsx(FIELD, {\n  type: \"leaveReason\",\n  name: \"leaveReason\",\n  label: \"\\u5047\\u52E4\\u4E8B\\u7531\",\n  component: TextField\n}), __jsx(FIELD, {\n  type: \"substitute\",\n  name: \"substitute\",\n  label: \"\\u8077\\u52D9\\u4EE3\\u7406\\u4EBA\",\n  component: TextField\n}), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(BUTTON, {\n  type: \"submit\",\n  fontFamily: \"Candara\",\n  variant: \"contained\",\n  color: \"secondary\",\n  disabled: isSubmitting\n}, \"\\u9001\\u51FA\\u5047\\u55AE\")))))));\n\nexport default Basic;","map":null,"metadata":{},"sourceType":"module"}