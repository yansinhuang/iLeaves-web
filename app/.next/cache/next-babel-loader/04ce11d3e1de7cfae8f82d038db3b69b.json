{"ast":null,"code":"var __jsx = React.createElement;\n// Render Prop\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport fetch from 'isomorphic-unfetch';\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Head from 'next/head';\nimport window from 'global';\nimport { Select } from 'material-ui-formik-components/Select';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport LuxonUtils from '@date-io/luxon';\n\nrequire(\"react-datepicker/dist/react-datepicker.css\");\n\nvar dateFormat = require('dateformat');\n\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Grid from '@material-ui/core/Grid';\nimport { useCurrentPosition } from 'react-use-geolocation';\nconst liff = window.liff;\nconst LOADERBOX = styled.div`\n  display: table;\n  margin: 0 auto;\n`;\nconst BOX = styled.div`\n  margin: 5.5em auto;\n  width: 80vw;\n  height: 64vh;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n`;\nconst TITLE = styled.h2`\n  color: #F8F9F9;\n  font-family: Candara;\n  text-align: center;\n  margin-bottom:-2em;\n`;\nconst CONTAINER = styled.div`\n  background: #F7F9FA;\n  height: 90vh;\n  width: 80vw;\n  margin: 5em auto;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\n\n  label {\n    font-family: Candara;\n    color: #1C2833;\n    font-size: 1.2em;\n    font-weight: 400;\n  }\n`;\nconst MYFORM = styled(Form)`\n  text-align: center;\n  padding-top: 2em;\n  padding-bottom: 2em;\n`;\nconst FIELD = styled(Field)`\n  width: 60vw;\n  margin: auto;\n`;\nconst BUTTON = styled(Button)`\n  width: 80%;\n  variant: contained;\n`;\nconst TomatoButton = styled.button`\n  color: tomato;\n  border-color: tomato;\n  width: 80%;\n`;\n\nfunction App() {\n  const [position, error] = useCurrentPosition();\n\n  if (!position && !error) {\n    return __jsx(\"p\", null, \"Waiting...\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", null, error.message);\n  }\n\n  return __jsx(BOX, null, __jsx(Head, null, __jsx(\"script\", {\n    src: \"https://d.line-scdn.net/liff/1.0/sdk.js\"\n  })), __jsx(\"body\", {\n    style: {\n      background: '#34495E'\n    }\n  }, __jsx(BOX, null, __jsx(\"p\", null, \"Latitude: \", position.coords.latitude), __jsx(\"p\", null, \"Longitude: \", position.coords.longitude))));\n}","map":null,"metadata":{},"sourceType":"module"}