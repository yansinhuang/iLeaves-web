{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\n// Render Prop\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport fetch from 'isomorphic-unfetch';\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport icon from '../components/image/icon.png';\nimport Head from 'next/head';\nimport window from 'global';\nconst liff = window.liff;\nconst BOX = styled.div`\n  margin: 5.5em auto;\n`;\nconst AppLogo = styled.img`\n  width: 50%;\n  display: block;\n  margin-top: 2em;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst TITLE = styled.h2`\n  color: #F8F9F9;\n  font-family: Candara;\n  text-align: center;\n  margin-bottom:-2em;\n`;\nconst CONTAINER = styled.div`\n  background: #F7F9FA;\n  height: auto;\n  width: 90%;\n  margin: 5em auto;\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\n\n  label {\n    font-family: Candara;\n    color: #1C2833;\n    font-size: 1.2em;\n    font-weight: 400;\n  }\n`;\nconst MYFORM = styled(Form)`\n  text-align: center;\n  padding-top: 2em;\n  padding-bottom: 2em;\n`;\nconst FIELD = styled(Field)`\n  width: 80%;\n`;\nconst BUTTON = styled(Button)`\n  width: 80%;\n  variant: contained;\n`;\nconst TomatoButton = styled.button`\n  color: tomato;\n  border-color: tomato;\n  width: 80%;\n`;\n\nfunction submitForm(data, userId) {\n  data.userId = userId;\n  fetch('https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/signIn', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(data)\n  }).then(res => {\n    res.status === 200 ? this.setState({\n      submitted: true\n    }) : '';\n  });\n}\n\nconst liffInit = async () => {\n  liff.init(data => {\n    // save userId\n    const userId = data.context.userId;\n    alert(\"success\");\n    alert(userId);\n    const URL_CHECKEXIST = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/checkExist\";\n    const body = {\n      userId: userId\n    };\n    fetch(URL_CHECKEXIST, {\n      method: 'post',\n      body: _JSON$stringify(body)\n    }).then(res => {\n      if (res) {\n        alert(\"connected\"); //str = JSON.stringify(res);\n\n        alert(res);\n        document.write(\"Already connected\"); //liff.closeWindow();\n      } else {\n        alert(\"not connected\");\n      }\n    });\n  }, err => {\n    alert(\"error\");\n  });\n};\n\nliffInit();\n\nconst Basic = () => __jsx(BOX, null, __jsx(Head, null, __jsx(\"script\", {\n  src: \"https://d.line-scdn.net/liff/1.0/sdk.js\"\n})), __jsx(\"body\", {\n  style: {\n    background: '#34495E'\n  }\n}, __jsx(BOX, null, __jsx(AppLogo, {\n  src: icon\n}), __jsx(TITLE, null, \"Welcome to Teddy Bear!\"), __jsx(Formik, {\n  initialValues: {\n    ubn: '',\n    email: '',\n    password: ''\n  },\n  validate: values => {\n    const errors = {}; // check for ubn\n\n    if (!values.ubn) {\n      errors.ubn = 'Required';\n    } // check for email\n\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    } // check for password\n\n\n    if (!values.password) {\n      errors.password = 'Required';\n    }\n\n    return errors;\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    /*\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 3));\n      setSubmitting(false);\n    }, 400);\n    */\n    console.log('submitting', values);\n  }\n}, ({\n  isSubmitting\n}) => __jsx(CONTAINER, null, __jsx(MYFORM, null, __jsx(FIELD, {\n  type: \"ubn\",\n  name: \"ubn\",\n  label: \"UBN\",\n  component: TextField\n}), __jsx(FIELD, {\n  type: \"email\",\n  name: \"email\",\n  label: \"Email\",\n  component: TextField\n}), __jsx(FIELD, {\n  type: \"password\",\n  name: \"password\",\n  label: \"Password\",\n  component: TextField\n}), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(BUTTON, {\n  type: \"submit\",\n  fontFamily: \"Candara\",\n  variant: \"contained\",\n  color: \"secondary\",\n  disabled: isSubmitting\n}, \"Sign In\")))))));\n\nexport default Basic;","map":null,"metadata":{},"sourceType":"module"}