{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\n// Render Prop\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport fetch from 'isomorphic-unfetch';\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Head from 'next/head';\nimport window from 'global';\nimport { Select } from 'material-ui-formik-components/Select';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport LuxonUtils from '@date-io/luxon';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nrequire(\"react-datepicker/dist/react-datepicker.css\");\n\nvar dateFormat = require('dateformat');\n\nconst liff = window.liff;\nconst BOX = styled.div`\n  margin: 5.5em auto;\n  width:100%;\n  height:40vh;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n`;\nconst LOADERBOX = styled.div`\n  display: table;\n  margin: 0 auto;\n\n`;\nconst TITLE = styled.h2`\n  color: #F8F9F9;\n  font-family: Candara;\n  text-align: center;\n  margin-bottom:-2em;\n`;\nconst CONTAINER = styled.div`\n  background: #F7F9FA;\n  height: 70vh;\n  width: 80vw;\n  margin: 5em auto;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\n\n  label {\n    font-family: Candara;\n    color: #1C2833;\n    font-size: 1.2em;\n    font-weight: 400;\n  }\n`;\nconst MYFORM = styled(Form)`\n  text-align: center;\n  padding-top: 2em;\n  padding-bottom: 2em;\n`;\nconst FIELD = styled(Field)`\n  width: 70vw;\n  margin: auto;\n`;\nconst BUTTON = styled(Button)`\n  width: 70vw;\n  variant: contained;\n`;\nconst TomatoButton = styled.button`\n  color: tomato;\n  border-color: tomato;\n  width: 80%;\n`;\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: null,\n      Authorization: null,\n      ubn: null,\n      leaveId: null,\n      leave: null,\n      status: null\n    };\n  }\n\n  componentDidMount() {\n    this.getQuery();\n    this.liffInit();\n  }\n\n  getQuery() {\n    let urlParams = new URLSearchParams(window.location.search);\n    urlParams = urlParams.toString().split(\"&\");\n    const ubn = urlParams[0].split(\"=\")[1];\n    const leaveId = urlParams[1].split(\"=\")[1];\n    this.setState({\n      leaveId: leaveId\n    });\n  }\n\n  liffInit() {\n    try {\n      liff.init(data => {\n        const userId = data.context.userId;\n        const accessToken = liff.getAccessToken();\n        const URL_CHECKEXIST = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/checkExist\";\n        const body = {\n          userId: userId\n        };\n        fetch(URL_CHECKEXIST, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: _JSON$stringify(body)\n        }).then(res => {\n          return res.text();\n        }).then(result => {\n          if (result) {\n            this.setState({\n              userId: userId\n            });\n            this.lineAuth(userId, accessToken);\n          } else {\n            alert(\"請登入以查看假單\");\n            window.location.replace(\"https://teddybear-dev.firebaseapp.com/signIn\");\n          }\n        });\n      }, err => {\n        alert(err.message);\n      });\n    } catch (err) {\n      next(err);\n    }\n  }\n\n  lineAuth(userId, accessToken) {\n    try {\n      const url = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/lineAuth\";\n      const body = {\n        userId: userId,\n        accessToken: accessToken\n      };\n      fetch(url, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify(body)\n      }).then(res => {\n        return res.json();\n      }).then(result => {\n        if (result) {\n          const ubn = result.staff.ubn;\n          const idToken = result.token.idToken;\n          this.setState({\n            Authorization: idToken,\n            ubn: ubn\n          });\n          this.checkStatus(idToken, ubn, this.state.leaveId);\n        } else {\n          alert(\"lineAuth no result\");\n        }\n      }).catch(function (error) {\n        alert(error.message);\n      });\n    } catch (err) {\n      next(err);\n    }\n  }\n\n  checkStatus(Authorization, ubn, id) {\n    try {\n      const URL_GETLEAVE = `https://us-central1-teddybear-dev.cloudfunctions.net/api/leave/target?ubn=${ubn}&id=${id}`;\n      fetch(URL_GETLEAVE, {\n        method: 'get',\n        headers: {\n          Authorization: Authorization\n        }\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        throw new Error('checkStatus response was not ok.');\n      }).then(result => {\n        if (result.status != \"同意 (代理人)\") {\n          this.setState({\n            status: \"signed\"\n          });\n        } else {\n          this.setState({\n            status: \"not signed\"\n          });\n        }\n      }).catch(function (error) {\n        alert(error.message);\n      });\n    } catch (err) {\n      next(err);\n    }\n  }\n\n  updateLeave(values) {\n    try {\n      const URL_UPDATELEAVE = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/leave/update\";\n      fetch(URL_UPDATELEAVE, {\n        method: 'post',\n        headers: {\n          \"Authorization\": this.state.Authorization,\n          \"Content-Type\": \"application/json\"\n        },\n        body: _JSON$stringify(values)\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        throw new Error('updateLeave response was not ok.');\n      }).then(result => {\n        this.setState({\n          leave: result\n        });\n        const messages = [{\n          type: \"text\",\n          text: \"拒絕成功\"\n        }];\n        this.pushMessage(this.state.userId, messages);\n        const substituteInfo = JSON.parse(result.substitute);\n        const messages_self = {\n          \"type\": \"flex\",\n          \"altText\": \"主管已拒絕假單\",\n          \"contents\": {\n            \"type\": \"bubble\",\n            \"styles\": {},\n            \"body\": {\n              \"type\": \"box\",\n              \"layout\": \"vertical\",\n              \"contents\": [{\n                \"type\": \"text\",\n                \"text\": \"主管\",\n                \"weight\": \"bold\",\n                \"color\": \"#1DB446\",\n                \"size\": \"sm\"\n              }, {\n                \"type\": \"text\",\n                \"text\": \"已拒絕假單\",\n                \"weight\": \"bold\",\n                \"size\": \"xxl\",\n                \"margin\": \"md\"\n              }, {\n                \"type\": \"separator\",\n                \"margin\": \"xxl\"\n              }, {\n                \"type\": \"box\",\n                \"layout\": \"vertical\",\n                \"margin\": \"xxl\",\n                \"spacing\": \"sm\",\n                \"contents\": [{\n                  \"type\": \"box\",\n                  \"layout\": \"horizontal\",\n                  \"contents\": [{\n                    \"type\": \"text\",\n                    \"text\": \"開始日期\",\n                    \"size\": \"sm\",\n                    \"color\": \"#555555\"\n                  }, {\n                    \"type\": \"text\",\n                    \"text\": result.startDate,\n                    \"size\": \"sm\",\n                    \"color\": \"#111111\",\n                    \"align\": \"end\"\n                  }]\n                }, {\n                  \"type\": \"box\",\n                  \"layout\": \"horizontal\",\n                  \"contents\": [{\n                    \"type\": \"text\",\n                    \"text\": \"結束日期\",\n                    \"size\": \"sm\",\n                    \"color\": \"#555555\"\n                  }, {\n                    \"type\": \"text\",\n                    \"text\": result.endDate,\n                    \"size\": \"sm\",\n                    \"color\": \"#111111\",\n                    \"align\": \"end\"\n                  }]\n                }, {\n                  \"type\": \"separator\",\n                  \"margin\": \"xxl\"\n                }, {\n                  \"type\": \"box\",\n                  \"layout\": \"horizontal\",\n                  \"margin\": \"xxl\",\n                  \"contents\": [{\n                    \"type\": \"text\",\n                    \"text\": \"假別\",\n                    \"size\": \"sm\",\n                    \"color\": \"#555555\"\n                  }, {\n                    \"type\": \"text\",\n                    \"text\": result.leaveType,\n                    \"size\": \"sm\",\n                    \"color\": \"#111111\",\n                    \"align\": \"end\"\n                  }]\n                }, {\n                  \"type\": \"box\",\n                  \"layout\": \"horizontal\",\n                  \"contents\": [{\n                    \"type\": \"text\",\n                    \"text\": \"請假原因\",\n                    \"size\": \"sm\",\n                    \"color\": \"#555555\"\n                  }, {\n                    \"type\": \"text\",\n                    \"text\": result.leaveReason,\n                    \"size\": \"sm\",\n                    \"color\": \"#111111\",\n                    \"align\": \"end\"\n                  }]\n                }, {\n                  \"type\": \"box\",\n                  \"layout\": \"horizontal\",\n                  \"contents\": [{\n                    \"type\": \"text\",\n                    \"text\": \"代理人\",\n                    \"size\": \"sm\",\n                    \"color\": \"#555555\"\n                  }, {\n                    \"type\": \"text\",\n                    \"text\": substituteInfo.name,\n                    \"size\": \"sm\",\n                    \"color\": \"#111111\",\n                    \"align\": \"end\"\n                  }]\n                }]\n              }, {\n                \"type\": \"separator\",\n                \"margin\": \"xxl\"\n              }, {\n                \"type\": \"box\",\n                \"layout\": \"horizontal\",\n                \"margin\": \"md\",\n                \"contents\": [{\n                  \"type\": \"text\",\n                  \"text\": \"簽核狀態\",\n                  \"size\": \"xs\",\n                  \"color\": \"#555555\"\n                }, {\n                  \"type\": \"text\",\n                  \"text\": \"拒絕(主管)\",\n                  \"color\": \"#ff0000\",\n                  \"size\": \"xs\",\n                  \"align\": \"end\"\n                }]\n              }, {\n                \"type\": \"box\",\n                \"layout\": \"horizontal\",\n                \"margin\": \"md\",\n                \"contents\": [{\n                  \"type\": \"text\",\n                  \"text\": \"拒絕原因\",\n                  \"size\": \"xs\",\n                  \"color\": \"#555555\"\n                }, {\n                  \"type\": \"text\",\n                  \"text\": result.rejectReason,\n                  \"color\": \"#111111\",\n                  \"size\": \"xs\",\n                  \"align\": \"end\"\n                }]\n              }]\n            }\n          }\n        };\n        this.pushMessage(this.state.userId, [messages_self]);\n        liff.closeWindow();\n      }).catch(function (error) {\n        alert(error.message);\n      });\n    } catch (err) {\n      next(err);\n    }\n  }\n\n  pushMessage(userId, messages) {\n    try {\n      const URL_PUSHMESSAGE = \"https://us-central1-teddybear-dev.cloudfunctions.net/api/message/pushMessage\";\n      const body = {\n        userId: userId,\n        messages: messages\n      };\n      fetch(URL_PUSHMESSAGE, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify(body)\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        throw new Error('pushMessage response was not ok.');\n      }).then(result => {//liff.closeWindow();\n      }).catch(function (error) {\n        alert(error.message);\n      });\n    } catch (err) {\n      next(err);\n    }\n  }\n\n  render() {\n    return __jsx(BOX, null, __jsx(Head, null, __jsx(\"script\", {\n      src: \"https://d.line-scdn.net/liff/1.0/sdk.js\"\n    })), __jsx(\"body\", {\n      style: {\n        background: '#34495E'\n      }\n    }, __jsx(BOX, null, __jsx(Formik, {\n      initialValues: {\n        rejectReason: ''\n      },\n      validate: values => {\n        const errors = {}; // check for rejectReason\n\n        if (!values.rejectReason) {\n          errors.rejectReason = 'Required';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        values.status = \"拒絕 (主管)\";\n        values.leaveId = this.state.leaveId;\n        values.ubn = this.state.ubn;\n        this.updateLeave(values);\n        setSubmitting(false); //console.log('submitting', values);\n      }\n    }, ({\n      isSubmitting,\n      values,\n      setFieldValue\n    }) => __jsx(CONTAINER, null, this.state.userId && this.state.Authorization && this.state.ubn && this.state.leaveId && this.state.status == \"not signed\" ? __jsx(MYFORM, null, __jsx(FIELD, {\n      type: \"rejectReason\",\n      name: \"rejectReason\",\n      label: \"\\u62D2\\u7D55\\u539F\\u56E0\",\n      component: TextField\n    }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(BUTTON, {\n      type: \"submit\",\n      fontFamily: \"Candara\",\n      variant: \"contained\",\n      color: \"secondary\",\n      disabled: isSubmitting\n    }, \"\\u9001\\u51FA\")) : this.state.userId && this.state.Authorization && this.state.ubn && this.state.leaveId && this.state.status == \"signed\" ? __jsx(MYFORM, null, __jsx(\"label\", null, \"\\u6B64\\u5F35\\u5047\\u55AE\\u5DF2\\u7C3D\\u6838\")) : __jsx(LOADERBOX, null, __jsx(Loader, {\n      type: \"ThreeDots\",\n      color: \"#f50057\",\n      height: 80,\n      width: 80\n    })))))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}