{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/yan/ezbot-web/app/pages/index.js\";\nvar __jsx = React.createElement;\n// Render Prop\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport fetch from 'isomorphic-unfetch';\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport icon from '../components/image/icon.png';\nimport Head from 'next/head';\nimport window from 'global';\nconst liff = window.liff;\nconst BOX = styled.div`\n  margin: 5.5em auto;\n`;\nconst AppLogo = styled.img`\n  width: 50%;\n  display: block;\n  margin-top: 2em;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst TITLE = styled.h2`\n  color: #F8F9F9;\n  font-family: Candara;\n  text-align: center;\n  margin-bottom:-2em;\n`;\nconst CONTAINER = styled.div`\n  background: #F7F9FA;\n  height: auto;\n  width: 90%;\n  margin: 5em auto;\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\n\n  label {\n    font-family: Candara;\n    color: #1C2833;\n    font-size: 1.2em;\n    font-weight: 400;\n  }\n`;\nconst MYFORM = styled(Form)`\n  text-align: center;\n  padding-top: 2em;\n  padding-bottom: 2em;\n`;\nconst FIELD = styled(Field)`\n  width: 80%;\n`;\nconst BUTTON = styled(Button)`\n  width: 80%;\n  variant: contained;\n`;\nconst TomatoButton = styled.button`\n  color: tomato;\n  border-color: tomato;\n  width: 80%;\n`;\n\nfunction submitForm(data, userId) {\n  data.userId = userId;\n  fetch('https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/signIn', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(data)\n  }).then(res => {\n    res.status === 200 ? this.setState({\n      submitted: true\n    }) : '';\n  });\n}\n\nconst liffInit = async () => {\n  liff.init(data => {\n    // save userId\n    const userId = data.context.userId;\n    alert(\"success\");\n    alert(userId);\n  }, err => {\n    alert(\"error\");\n  });\n};\n\nliffInit();\n\nconst Basic = () => __jsx(BOX, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, __jsx(Head, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, __jsx(\"script\", {\n  src: \"https://d.line-scdn.net/liff/1.0/sdk.js\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n})), __jsx(\"body\", {\n  style: {\n    background: '#34495E'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, __jsx(BOX, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, __jsx(AppLogo, {\n  src: icon,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}), __jsx(TITLE, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, \"Welcome to Teddy Bear!\"), __jsx(Formik, {\n  initialValues: {\n    ubn: '',\n    email: '',\n    password: ''\n  },\n  validate: values => {\n    const errors = {}; // check for ubn\n\n    if (!values.ubn) {\n      errors.ubn = 'Required';\n    } // check for email\n\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    } // check for password\n\n\n    if (!values.password) {\n      errors.password = 'Required';\n    }\n\n    return errors;\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    /*\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 3));\n      setSubmitting(false);\n    }, 400);\n    */\n    console.log('submitting', values);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, ({\n  isSubmitting\n}) => __jsx(CONTAINER, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129\n  },\n  __self: this\n}, __jsx(MYFORM, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}, __jsx(FIELD, {\n  type: \"ubn\",\n  name: \"ubn\",\n  label: \"UBN\",\n  component: TextField,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}), __jsx(FIELD, {\n  type: \"email\",\n  name: \"email\",\n  label: \"Email\",\n  component: TextField,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}), __jsx(FIELD, {\n  type: \"password\",\n  name: \"password\",\n  label: \"Password\",\n  component: TextField,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}), __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n}), __jsx(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135\n  },\n  __self: this\n}), __jsx(BUTTON, {\n  type: \"submit\",\n  fontFamily: \"Candara\",\n  variant: \"contained\",\n  color: \"secondary\",\n  disabled: isSubmitting,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}, \"Sign In\")))))));\n\nexport default Basic;","map":{"version":3,"sources":["/Users/yan/ezbot-web/app/pages/index.js"],"names":["React","styled","Formik","Form","Field","ErrorMessage","TextField","fetch","Button","Box","icon","Head","window","liff","BOX","div","AppLogo","img","TITLE","h2","CONTAINER","MYFORM","FIELD","BUTTON","TomatoButton","button","submitForm","data","userId","method","headers","body","then","res","status","setState","submitted","liffInit","init","context","alert","err","Basic","background","ubn","email","password","values","errors","test","setSubmitting","console","log","isSubmitting"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,MAAMC,GAAG,GAAGb,MAAM,CAACc,GAAI;;CAAvB;AAGA,MAAMC,OAAO,GAAGf,MAAM,CAACgB,GAAI;;;;;;CAA3B;AAOA,MAAMC,KAAK,GAAGjB,MAAM,CAACkB,EAAG;;;;;CAAxB;AAMA,MAAMC,SAAS,GAAGnB,MAAM,CAACc,GAAI;;;;;;;;;;;;;CAA7B;AAcA,MAAMM,MAAM,GAAGpB,MAAM,CAACE,IAAD,CAAO;;;;CAA5B;AAKA,MAAMmB,KAAK,GAAGrB,MAAM,CAACG,KAAD,CAAQ;;CAA5B;AAGA,MAAMmB,MAAM,GAAGtB,MAAM,CAACO,MAAD,CAAS;;;CAA9B;AAIA,MAAMgB,YAAY,GAAGvB,MAAM,CAACwB,MAAO;;;;CAAnC;;AAMA,SAASC,UAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;AACjCD,EAAAA,IAAI,CAACC,MAAL,GAAcA,MAAd;AACArB,EAAAA,KAAK,CAAC,uEAAD,EAA0E;AAC7EsB,IAAAA,MAAM,EAAE,MADqE;AAE7EC,IAAAA,OAAO,EAAE;AACP,gBAAU,mCADH;AAEP,sBAAgB;AAFT,KAFoE;AAM7EC,IAAAA,IAAI,EAAE,gBAAeJ,IAAf;AANuE,GAA1E,CAAL,CAOGK,IAPH,CAOSC,GAAD,IAAS;AACfA,IAAAA,GAAG,CAACC,MAAJ,KAAe,GAAf,GAAqB,KAAKC,QAAL,CAAc;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAd,CAArB,GAA0D,EAA1D;AACD,GATD;AAUD;;AAED,MAAMC,QAAQ,GAAG,YAAY;AAC3BxB,EAAAA,IAAI,CAACyB,IAAL,CAAUX,IAAI,IAAI;AAChB;AACA,UAAMC,MAAM,GAAGD,IAAI,CAACY,OAAL,CAAaX,MAA5B;AACAY,IAAAA,KAAK,CAAC,SAAD,CAAL;AACAA,IAAAA,KAAK,CAACZ,MAAD,CAAL;AAED,GAND,EAMGa,GAAG,IAAI;AACRD,IAAAA,KAAK,CAAC,OAAD,CAAL;AACD,GARD;AASD,CAVD;;AAWAH,QAAQ;;AACR,MAAMK,KAAK,GAAG,MACZ,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAQ,EAAA,GAAG,EAAC,yCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADA,EAIA;AAAM,EAAA,KAAK,EAAE;AAACC,IAAAA,UAAU,EAAC;AAAZ,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,OAAD;AAAS,EAAA,GAAG,EAAEjC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAGE,MAAC,MAAD;AACE,EAAA,aAAa,EAAE;AAAEkC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,KAAK,EAAE,EAAlB;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GADjB;AAEE,EAAA,QAAQ,EAAEC,MAAM,IAAI;AAClB,UAAMC,MAAM,GAAG,EAAf,CADkB,CAElB;;AACA,QAAI,CAACD,MAAM,CAACH,GAAZ,EAAiB;AACfI,MAAAA,MAAM,CAACJ,GAAP,GAAa,UAAb;AACD,KALiB,CAMlB;;;AACA,QAAI,CAACG,MAAM,CAACF,KAAZ,EAAmB;AACjBG,MAAAA,MAAM,CAACH,KAAP,GAAe,UAAf;AACD,KAFD,MAEO,IACL,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADI,EAEL;AACAG,MAAAA,MAAM,CAACH,KAAP,GAAe,uBAAf;AACD,KAbiB,CAclB;;;AACA,QAAI,CAACE,MAAM,CAACD,QAAZ,EAAsB;AACpBE,MAAAA,MAAM,CAACF,QAAP,GAAkB,UAAlB;AACD;;AACD,WAAOE,MAAP;AACD,GArBH;AAsBE,EAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEG,IAAAA;AAAF,GAAT,KAA+B;AACvC;;;;;;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,MAA1B;AACD,GA9BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAgCG,CAAC;AAAEM,EAAAA;AAAF,CAAD,KACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD;AAAO,EAAA,IAAI,EAAC,KAAZ;AAAkB,EAAA,IAAI,EAAC,KAAvB;AAA6B,EAAA,KAAK,EAAG,KAArC;AAA2C,EAAA,SAAS,EAAK/C,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAoB,EAAA,IAAI,EAAC,OAAzB;AAAiC,EAAA,KAAK,EAAG,OAAzC;AAAiD,EAAA,SAAS,EAAKA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,MAAC,KAAD;AAAO,EAAA,IAAI,EAAC,UAAZ;AAAuB,EAAA,IAAI,EAAC,UAA5B;AAAuC,EAAA,KAAK,EAAG,UAA/C;AAA0D,EAAA,SAAS,EAAKA,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,EAME,MAAC,MAAD;AACA,EAAA,IAAI,EAAC,QADL;AAEA,EAAA,UAAU,EAAE,SAFZ;AAGA,EAAA,OAAO,EAAC,WAHR;AAIA,EAAA,KAAK,EAAC,WAJN;AAKA,EAAA,QAAQ,EAAE+C,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADA,CAjCJ,CAHF,CADF,CAJA,CADF;;AAqEA,eAAeX,KAAf","sourcesContent":["// Render Prop\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport fetch from 'isomorphic-unfetch';\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport icon from '../components/image/icon.png';\nimport Head from 'next/head';\nimport window from 'global'\nconst liff = window.liff;\nconst BOX = styled.div`\n  margin: 5.5em auto;\n`;\nconst AppLogo = styled.img`\n  width: 50%;\n  display: block;\n  margin-top: 2em;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst TITLE = styled.h2`\n  color: #F8F9F9;\n  font-family: Candara;\n  text-align: center;\n  margin-bottom:-2em;\n`;\nconst CONTAINER = styled.div`\n  background: #F7F9FA;\n  height: auto;\n  width: 90%;\n  margin: 5em auto;\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\n\n  label {\n    font-family: Candara;\n    color: #1C2833;\n    font-size: 1.2em;\n    font-weight: 400;\n  }\n`;\nconst MYFORM = styled(Form)`\n  text-align: center;\n  padding-top: 2em;\n  padding-bottom: 2em;\n`;\nconst FIELD = styled(Field)`\n  width: 80%;\n`;\nconst BUTTON = styled(Button)`\n  width: 80%;\n  variant: contained;\n`;\nconst TomatoButton = styled.button`\n  color: tomato;\n  border-color: tomato;\n  width: 80%;\n`;\n\nfunction submitForm (data, userId) {\n  data.userId = userId;\n  fetch('https://us-central1-teddybear-dev.cloudfunctions.net/api/staff/signIn', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then((res) => {\n    res.status === 200 ? this.setState({ submitted: true }) : ''\n  })\n}\n\nconst liffInit = async () => {\n  liff.init(data => {\n    // save userId\n    const userId = data.context.userId;\n    alert(\"success\");\n    alert(userId);\n\n  }, err => {\n    alert(\"error\");\n  });\n}\nliffInit();\nconst Basic = () => (\n  <BOX>\n  <Head>\n    <script src=\"https://d.line-scdn.net/liff/1.0/sdk.js\"></script>\n  </Head>\n  <body style={{background:'#34495E'}}>\n    <BOX>\n      <AppLogo src={icon}/>\n      <TITLE>Welcome to Teddy Bear!</TITLE>\n      <Formik\n        initialValues={{ ubn: '', email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          // check for ubn\n          if (!values.ubn) {\n            errors.ubn = 'Required';\n          }\n          // check for email\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          // check for password\n          if (!values.password) {\n            errors.password = 'Required';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          /*\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 3));\n            setSubmitting(false);\n          }, 400);\n          */\n          console.log('submitting', values);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <CONTAINER>\n          <MYFORM>\n            <FIELD type=\"ubn\" name=\"ubn\" label = \"UBN\" component = { TextField }/>\n            <FIELD type=\"email\" name=\"email\" label = \"Email\" component = { TextField }/>\n            <FIELD type=\"password\" name=\"password\" label = \"Password\" component = { TextField }/>\n            <br></br>\n            <br></br>\n            <BUTTON\n            type=\"submit\"\n            fontFamily= \"Candara\"\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={isSubmitting}\n          >\n            Sign In\n          </BUTTON>\n          </MYFORM>\n          </CONTAINER>\n        )}\n      </Formik>\n    </BOX>\n  </body>\n  </BOX>\n  \n);\n\n\nexport default Basic;"]},"metadata":{},"sourceType":"module"}